name: telemetry-dispatch-setup
description: |
  This script sets important environment variables that may be used by tools that
  implement OpenTelemetry. This script also stores attributes (metadata) for the
  current job, so that this metadata can be associated with spans during the final
  parsing of job metadata.

  Obtains GitHub Actions job list and matches current job using runner name and attempt number.

  This action should be called at the beginning of child workflows, generally as the first
  step in any job other than computing the matrix.

inputs:
  json_params:
    type: string
    default: "{}"
    description: "JSON string of parameters. Used to avoid 10-param limit on workflow inputs."
  extra_attributes:
    description: "comma-separated key=value attributes to associate with the current job"

runs:
  using: 'composite'
  steps:
    - name: Handle empty inputs
      id: handle-empty-inputs
      shell: bash
      run: |
        echo "shared_actions_repo=${{ fromJson(inputs.json_params).shared_actions_repo || 'rapidsai/shared-actions' }}" >> $GITHUB_OUTPUT
        echo "shared_actions_ref=${{ fromJson(inputs.json_params).shared_actions_ref || 'main' }}" >> $GITHUB_OUTPUT
    - uses: actions/checkout@v4
      with:
        repository: ${{ steps.handle-empty-inputs.outputs.shared_actions_repo }}
        ref: ${{ steps.handle-empty-inputs.outputs.shared_actions_ref }}
        path: ./shared-actions
    - name: Creating folder for job-created telemetry artifacts
      shell: bash
      run: mkdir -p telemetry-artifacts
    - uses: ./shared-actions/telemetry-impls/github-actions-job-info
    - shell: bash
      run:
        echo JOB_ID="$(cat job_info.json | jq -r '.id')" >> ${GITHUB_ENV};
    - name: Set OTEL_SERVICE_NAME from job
      uses: ./shared-actions/telemetry-impls/set-otel-service-name
    - name: Set OTEL_RESOURCE_ATTRIBUTES and env vars so that child processes can use them
      shell: bash
      run:
        attributes="git.repository=${GITHUB_REPOSITORY},git.ref=${GITHUB_REF},git.sha=${GITHUB_SHA},git.job_url=${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}"
        labels="$(jq -r '.labels | join(" ")' job_info.json)";
        if [ "${labels}" != "" ]; then
          attributes="${attributes},rapids.labels=${labels}";
        fi;
        if [ "${{ inputs.extra_attributes }}" != "" ]; then
          attributes="${attributes},${{ inputs.extra_attributes }}";
        fi;
        attributes=$(echo "${attributes}" | sed 's/^,//');
        attributes=$(echo "${attributes}" | sed 's/,$//');
        attributes=$(echo "${attributes}" | sed -r "s/(git.job_url=[^,]+)/\1\/job\/${JOB_ID}/");
        echo OTEL_RESOURCE_ATTRIBUTES="${attributes}" >> ${GITHUB_ENV};
