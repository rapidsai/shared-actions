name: 'Telemetry summarize'
description: |
  Consumes job info, parses into spans, and pushes spans.

runs:
  using: 'composite'
  steps:
    - name: Setup python
      uses: actions/setup-python@v5
      with:
        python-version: 3.11
        cache: 'pip'
        cache-dependency-path: './shared-actions/telemetry-impls/summarize/requirements.txt'
    - name: Install dependencies
      run: pip install -r './shared-actions/telemetry-impls/summarize/requirements.txt'
      shell: bash
    # Writes JSON file that jobs below consume
    - uses: ./shared-actions/telemetry-impls/github-actions-job-info
      id: github-job-info
      with:
        all_jobs: true
    - name: Upload job JSON file if debugging
      uses: actions/upload-artifact@v4
      if: runner.debug == '1'
      with:
        name: telemetry-tools-all_jobs.json
        path: all_jobs.json
    # This downloads ALL of the files that we have collected from each job.
    - uses: actions/download-artifact@v4
      with:
        path: telemetry-artifacts
        pattern: telemetry-tools-*
        merge-multiple: false

    - name: Run parse and send trace/spans to endpoint
      shell: bash
      run: |
        OTEL_SERVICE_NAME=${OTEL_SERVICE_NAME:-${GITHUB_WORKFLOW}-${GITHUB_REPOSITORY#*/}}
        export OTEL_SERVICE_NAME
        echo "OTEL_SERVICE_NAME=${OTEL_SERVICE_NAME}" >> $GITHUB_ENV
        TRACEPARENT=$(./shared-actions/telemetry-impls/traceparent.sh "${OTEL_SERVICE_NAME}")
        export TRACEPARENT
        echo "TRACEPARENT=${TRACEPARENT}" >> $GITHUB_ENV

        ls -lR telemetry-artifacts
        timeout 5m python3 ./shared-actions/telemetry-impls/summarize/send_trace.py
    - name: Clean up attributes artifacts from all jobs
      uses: ./shared-actions/telemetry-impls/clean-up-artifacts

    - name: Add link in step summary
      shell: bash
      run: |
        TRACE_ID="$(cut -d'-' -f2 <<<${TRACEPARENT})"
        TRACE_URL="https://grafana.arc-nvks.gha-runners.nvidia.com/explore?schemaVersion=1&panes=%7B%22qqy%22:%7B%22datasource%22:%22tempo%22,%22queries%22:%5B%7B%22refId%22:%22A%22,%22datasource%22:%7B%22type%22:%22tempo%22,%22uid%22:%22tempo%22%7D,%22queryType%22:%22traceql%22,%22limit%22:20,%22tableType%22:%22traces%22,%22query%22:%22${TRACE_ID}%22%7D%5D,%22range%22:%7B%22from%22:%22now-15m%22,%22to%22:%22now%22%7D%7D%7D&orgId=1"
        echo "**View Run Trace [in (NVIDIA Internal) Grafana](${TRACE_URL})**" >> "${GITHUB_STEP_SUMMARY}"
    # Telemetry jobs should never affect the pass/fail status of the overall CI
    - name: Exit success
      if: always()
      continue-on-error: true
      shell: bash
      run: |
        exit 0
